// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuestAPI.Web.Data;

#nullable disable

namespace QuestAPI.Web.Migrations
{
    [DbContext(typeof(QuestDbContext))]
    [Migration("20241020042930_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuestAPI.Core.Data.Models.Item.ItemEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PlayerEntryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("QuestEntryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntryId");

                    b.HasIndex("QuestEntryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.Player.PlayerEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CurrentExp")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("Money")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.PlayerQuest.PlayerQuestEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ConditionCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("QuestId");

                    b.ToTable("PlayerQuests");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.Quest.QuestEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ConditionFinishCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("ConditionObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExperienceReward")
                        .HasColumnType("integer");

                    b.Property<int>("MinimalLevel")
                        .HasColumnType("integer");

                    b.Property<int>("MoneyReward")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PreviousQuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PreviousQuestId");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.Item.ItemEntry", b =>
                {
                    b.HasOne("QuestAPI.Core.Data.Models.Player.PlayerEntry", null)
                        .WithMany("Inventory")
                        .HasForeignKey("PlayerEntryId");

                    b.HasOne("QuestAPI.Core.Data.Models.Quest.QuestEntry", null)
                        .WithMany("ItemRewards")
                        .HasForeignKey("QuestEntryId");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.PlayerQuest.PlayerQuestEntry", b =>
                {
                    b.HasOne("QuestAPI.Core.Data.Models.Player.PlayerEntry", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestAPI.Core.Data.Models.Quest.QuestEntry", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.Quest.QuestEntry", b =>
                {
                    b.HasOne("QuestAPI.Core.Data.Models.Quest.QuestEntry", "PreviousQuest")
                        .WithMany()
                        .HasForeignKey("PreviousQuestId");

                    b.Navigation("PreviousQuest");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.Player.PlayerEntry", b =>
                {
                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("QuestAPI.Core.Data.Models.Quest.QuestEntry", b =>
                {
                    b.Navigation("ItemRewards");
                });
#pragma warning restore 612, 618
        }
    }
}
